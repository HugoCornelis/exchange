#!/usr/bin/perl -w
#!/usr/bin/perl -d:ptkdb -w
#

use strict;


BEGIN
{
    #! make check

    push @INC, '../perl';

    #! make distcheck

    push @INC, '../../perl';

    #! normal run

    push @INC, './perl';

    #! after install

    push @INC, '/usr/local/glue/swig/perl';
}


use Data::Dumper;

use Getopt::Long;

use YAML;


BEGIN
{
    $SIG{__DIE__}
	= sub {
	    use Carp;

	    confess @_;
	};
}


my $option_commands = [];
my $option_gui;
our $option_verbose;


sub main
{
    read_cmd_line();

    require Neurospaces;
    require Neurospaces::Exchange;

    my $parser = Neurospaces::Exchange::Parser->new();

    my $model_container = $parser->read($ARGV[0], { verbose => $option_verbose, }, );

    if (!$model_container)
    {
	die "$0: parsing of $ARGV[0] failed";
    }

    if (@$option_commands)
    {
	foreach my $command (@$option_commands)
	{
# 	    print "command $command\n";

	    $model_container->querymachine($command);
	}
    }

    if ($option_gui)
    {
	require Neurospaces::GUI;

	Neurospaces::GUI::gui($0);
    }


}


sub read_cmd_line
{
    my $option_help;
    my $option_version;

    my $result
	= GetOptions
	    (
	     "commands=s" => $option_commands,
	     "gui!" => \$option_gui,
	     "help!" => \$option_help,
	     "v|verbose+" => \$option_verbose,
	     "version" => \$option_version,
	    );

    if ($option_version)
    {
	my $version = version();

	print $version . "\n";

	exit 1;
    }

    if ($option_help || @ARGV eq 0)
    {
	print
	    "
$0 <model-filename>

$0: parse a model description, interact with the model.

options :
    --commands               execute these query machine commands after loading a file.
    --gui                    enter the gui.
    --help                   print usage information.
    --verbose                set verbosity level.
    --version                give version information.
";

	exit 1;
    }
}


sub version
{
#     # $Format: "    my $version=\"${package}-${label}\";"$
#     my $version="studio-userdocs-6";

#     return $version;

    return '0.1';
}


main();


