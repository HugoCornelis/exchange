#!/usr/bin/perl -w
#!/usr/bin/perl -d:ptkdb -w
#

use strict;


use Data::Dumper;

use Getopt::Long;

use YAML;


BEGIN
{
    $SIG{__DIE__}
	= sub {
	    use Carp;

	    confess @_;
	};
}


my $option_commands = [];
my $option_gui;
our $option_verbose;
my $option_yaml_stdout;


sub main
{
    read_cmd_line();

    require Neurospaces;
    require Neurospaces::Exchange;

    my $parser = Neurospaces::Exchange::Parser->new();

    my $parse_error = $parser->read($ARGV[0], { verbose => $option_verbose, yaml_stdout => $option_yaml_stdout, }, );

    if ($parse_error)
    {
	die "$0: parsing of $ARGV[0] failed ($parse_error)";
    }

    my $model_container = $parser->{model_container};

    if (@$option_commands)
    {
	foreach my $command (@$option_commands)
	{
# 	    print "command $command\n";

	    $model_container->querymachine($command);
	}
    }

    if ($option_gui)
    {
	require Neurospaces::GUI;

	Neurospaces::GUI::gui($0);
    }


}


sub read_cmd_line
{
    my $option_help;
    my $option_version;

    my $result
	= GetOptions
	    (
	     "commands=s" => $option_commands,
	     "gui!" => \$option_gui,
	     "help!" => \$option_help,
	     "v|verbose+" => \$option_verbose,
	     "version" => \$option_version,
	     "yaml-stdout" => \$option_yaml_stdout,
	    );

    if ($option_version)
    {
	require Neurospaces::Exchange;

	my $version = Neurospaces::Exchange::version();

	print $version . "\n";

	exit 1;
    }

    if ($option_help || @ARGV eq 0)
    {
	print
	    "
$0 <model-filename>

$0: parse a model description, interact with the model.

options :
    --commands               execute these query machine commands after loading a file.
    --gui                    enter the gui.
    --help                   print usage information.
    --verbose                set verbosity level.
    --version                give version information.
    --yaml-stdout            output yamlified xml to stdout.
";

	exit 1;
    }
}


main();


